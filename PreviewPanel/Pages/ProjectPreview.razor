<div class="project-preview">
    @if (isWallpaper)
    {
        <div class="project__item">
            <h1 class="project__item_date">Release date: @getDate()</h1>
            <div class="project__item_image">
                @if (ProjectInfo.Images == null || ProjectInfo.Images.Length == 0)
                {
                    <div style="aspect-ratio: 16 / 9; background-color: #090a1a"></div>
                }
                else
                {
                    <img src="@ProjectInfo.Images[0]" alt="@ProjectInfo.Title">
                }

                <div class="project__item_title" @onclick="toInfo">
                    <h4>@ProjectInfo.Title</h4>
                </div>
            </div>
        </div>
    }
    else
    {
        <h3 class="project__title">@ProjectInfo.Title</h3>
        <div class="col-12">
            @if (ProjectInfo.Images != null && ProjectInfo.Images.Length != 0)
            {
                <div id="carouselControls" class="carousel slide" data-ride="carousel">
                    <div class="carousel-inner">
                        <div class="carousel-item @isActiveImage(0)">
                            <div class="preview">
                                <div style="background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(@ProjectInfo.Images[0])">
                                    <img src="@ProjectInfo.Images[0]" alt="preview" class="image" />
                                </div>
                            </div>
                        </div>
                        @for (int i = 1; i < ProjectInfo.Images.Length; i++)
                        {
                            <div class="carousel-item @isActiveImage(i)">
                                <div class="preview">
                                    <div style="background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url(@ProjectInfo.Images[i])">
                                        <img src="@ProjectInfo.Images[i]" alt="preview" class="image" />
                                    </div>
                                </div>
                            </div>
                        }
                        @for (int i = 0; i < ProjectInfo.Videos.Length; i++)
                        {
                            <div class="carousel-item @isActiveImage(i + ProjectInfo.Images.Length)">
                                <div class="embed-responsive embed-responsive-16by9">
                                    <iframe class="embed-responsive-item" src="@ProjectInfo.Videos[i]" frameBorder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowFullScreen="allowfullscreen" title="video"></iframe>
                                </div>
                            </div>
                        }
                    </div>
                    <a class="carousel-control-prev" href="#carouselControls" role="button" data-slide="prev" @onclick="prevImg">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselControls" role="button" data-slide="next" @onclick="nextImg">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            }
            <button class="project__button_back" @onclick="toWallpaper">Вернуться к проектам</button>
        </div>
        <div class="col-12">
            <div class="project__description">
                @if (ProjectInfo.Description != null && ProjectInfo.Description != "")
                {
                    @foreach (var phrase in ProjectInfo.Description.Split('\n'))
                    {
                        <p class="project__p">@phrase</p>
                    }
                }
                @if (ProjectInfo.Tech != null && ProjectInfo.Tech.Length != 0)
                {
                    foreach (var tech in ProjectInfo.Tech)
                    {
                        <div class="project__logos"><img src="@tech" alt='logo' /></div>
                    }
                }
                @if (ProjectInfo.Developers != null && ProjectInfo.Developers.Length != 0)
                {
                    <div class="project__developers"><p><span>Разработчики: </span>@String.Join(' ', ProjectInfo.Developers)</p></div>
                }
                @if (ProjectInfo.Site != null && ProjectInfo.Site != "")
                {
                    <div class="project__site"><p><span>Сайт: </span><a href="https:// + @ProjectInfo.Site">@ProjectInfo.Site</a></p></div>
                }
                @if (ProjectInfo.SourceCode != null && ProjectInfo.SourceCode.Length != 0)
                {
                    <div class="project__source"><span>Исходный код: </span>
                    @if (ProjectInfo.SourceCode.Length == 1)
                    {
                        <a href="@ProjectInfo.SourceCode[0].Link"><img src="https://github.githubassets.com/favicons/favicon.svg" alt="" class="project__source_logo" /></a>
                    }
                    else
                    {
                        foreach (var source in ProjectInfo.SourceCode)
                        {
                            <div><a href="@source.Link"><img src="https://github.githubassets.com/favicons/favicon.svg" alt="" class="project__source_logo" /><span class="source__name">@source.Name</span></a></div>
                        }
                    }
                    </div>
                }
                <div class="project__date"><p><span>Текущая версия от: </span>@getDate()</p></div>
            </div>
        </div>
    }
    @* @(Serialize(ProjectInfo)) *@
</div>

@code {
    [Parameter]
    public Landing.API.Models.ProjectInfo ProjectInfo { get; set; }

    public Boolean isWallpaper = false;
    public int activeImage = 0;

    private System.Text.Json.JsonSerializerOptions serializerOptions = new System.Text.Json.JsonSerializerOptions
    {
        Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping,
        WriteIndented = true
    };

    private string Serialize(object value)
    {
        return System.Text.Json.JsonSerializer.Serialize(value, serializerOptions);
    }

    private string getDate()
    {
        DateTime date = DateTime.Today;

        if (ProjectInfo.Date == null)
        {
            return date.Day + "/" + date.Month + "/" + date.Year;
        }
        else
        {
            return ProjectInfo.Date;
        }
    }

    private String isActiveImage(int number) {
        return number == activeImage ? "active" : "";
    }

    private void toInfo()
    {
        this.isWallpaper = false;
    }

    private void toWallpaper()
    {
        this.isWallpaper = true;
    }

    private void prevImg() {
        if (activeImage == 0)
        {
            activeImage = ProjectInfo.Images.Length + ProjectInfo.Videos.Length - 1;
        }
        else
        {
            activeImage--;
        }
    }

    private void nextImg() {
        if (activeImage == ProjectInfo.Images.Length + ProjectInfo.Videos.Length - 1)
        {
            activeImage = 0;
        }
        else
        {
            activeImage++;
        }
    }
}
