name: $(BuildID)-$(Build.SourceBranchName)

pool:
  vmImage: 'ubuntu-latest'

variables:
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    buildImage: true
    deployService: true
    deployEnvironment: development
    imageTags: |
      $(Build.BuildId)
      develop
    apiServiceName: landing-develop_api
    adminServiceName: landing-develop_admin
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    buildImage: true
    deployService: true
    deployEnvironment: production
    imageTags: |
      $(Build.BuildId)
      latest
    apiServiceName: landing_api
    adminServiceName: landing_admin

stages:
- stage: build
  jobs:
  - job: buildApi
    steps:
    - task: Cake@2
      inputs:
        script: 'build.cake'
        target: 'PublishAll'
        verbosity: 'Verbose'
    - publish: deploy/api
      artifact: api-build
    - publish: deploy/admin
      artifact: admin-build
    - publish: deploy/preview
      artifact: preview-build

- stage: dockerImage
  condition: ${{variables.buildImage}}
  jobs:
  - job: dockerBuild
    strategy:
      matrix:
        api:
          imageName: rtuitlab/landing-api
          artifactName: api-build
        admin:
          imageName: rtuitlab/landing-admin
          artifactName: admin-build
        preview:
          imageName: rtuitlab/landing-preview
          artifactName: preview-build
    steps:
    - download: current
      artifact: $(artifactName)
      displayName: Download $(artifactName)
    - task: Docker@2
      inputs:
        containerRegistry: 'rtuitlab connection by admin'
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: '$(Pipeline.Workspace)/$(artifactName)/Dockerfile'
        buildContext: '$(Pipeline.Workspace)/$(artifactName)'
        tags: ${{variables.imageTags}}

- stage: UpdateServices
  condition: ${{variables.deployService}}
  jobs:
  - deployment: DeployApi
    pool:
      vmImage: 'ubuntu-latest'
    environment: ${{variables.deployEnvironment}}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: SSH@0
              inputs:
                sshEndpoint: 'swarm manager'
                runOptions: 'commands'
                commands: 'docker service update --image rtuitlab/landing-api:$(Build.BuildId) ${{variables.apiServiceName}}'
                readyTimeout: '20000'
  - deployment: DeployAdmin
    pool:
      vmImage: 'ubuntu-latest'
    environment: ${{variables.deployEnvironment}}
    strategy:
      runOnce:
        deploy:
          steps:
            - download: none
            - task: SSH@0
              inputs:
                sshEndpoint: 'swarm manager'
                runOptions: 'commands'
                commands: 'docker service update --image rtuitlab/landing-admin:$(Build.BuildId) ${{variables.adminServiceName}}'
                readyTimeout: '20000'